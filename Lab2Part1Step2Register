// Filename: Lab2Part1Step2Register
// Author: Aryan Verma
// Date: 10/05/2025
// Description: The file controls the blinking of an external LED on an ESP32

#include "driver/gpio.h"
#include "soc/io_mux_reg.h"
#include "soc/gpio_reg.h"
#include "soc/gpio_periph.h"
#define GPIO_PIN 5 // GPIO5
int tracker = 0;

void setup() {
 // ================> TODO:
 // Set a pin as output
 Serial.begin(115200);
 PIN_FUNC_SELECT(GPIO_PIN_MUX_REG[GPIO_PIN], PIN_FUNC_GPIO);
  *((volatile uint32_t *)GPIO_ENABLE_REG) |= (1<<GPIO_PIN);
}
void loop() {
 // ================> TODO:
 // For 1000 repetitions:
 //		Measure time to:
 //        		- Turn pin's output to HIGH
 //        		- Turn pin's output to LOW
 // Print out total time to the serial monitor
 // 1 second delay

  // unsigned long endTime;
  unsigned long startTime = micros();
  for(int i = 0; i < 1000; i++) {
    
    *((volatile uint32_t *)GPIO_OUT_REG) |= (1<<GPIO_PIN);
    *((volatile uint32_t *)GPIO_OUT_REG) &= ~(1<<GPIO_PIN);
    // unsigned long endTime = micros();
    // tracker += endTime - startTime;
  }
  
  unsigned long endTime = micros();

  Serial.print("Total microseconds: ");
  Serial.println(endTime - startTime);

  delay(1000);
}
